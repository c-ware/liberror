.TH "liberror" "cware" "Oct 06, 2022" "" "C-Ware Manuals"
.SH NAME
liberror - macros used for runtime safety checks
.SH SYNOPSIS
\fB#define LIBERROR_IS_NULL(\fR\fIvalue\fR\fB,\fR \fIrepr\fR\fB);\fR
.br
\fB#define LIBERROR_IS_OOB(\fR\fIvalue\fR\fB);\fR
.br
\fB#define LIBERROR_IS_NEGATIVE(\fR\fIvalue\fR\fB,\fR \fIrepr\fR\fB);\fR
.br
\fB#define LIBERROR_IS_POSITIVE(\fR\fIvalue\fR\fB,\fR \fIrepr\fR\fB);\fR
.br
\fB#define LIBERROR_IS_VALUE(\fR\fIvalue\fR\fB,\fR \fIis\fR\fB,\fR \fIrepr_value\fR\fB,\fR \fIrepr_is\fR\fB);\fR
.br
.SH DESCRIPTION
A collection of macros used for runtime safety checks, like checking if a
pointer is NULL, if an index is out of the bounds, as well as context-specific
macros like file opening failure, and malloc failure.

Since safety checks can take a toll on higher-performance applications,
the macros provided by \fBliberror\fR(cware) are togglable at compile time
by defining the \fBLIBERROR_ENABLED\fR macro.

If you want to use liberror, you will want to define the following macros
at compile time, or in some central header:
.br

\fB#define LIBERROR_STREAM   stderr\fR
.br
\fB#define LIBERROR_ENABLED\fR

.SH SEE ALSO
cware(cware)